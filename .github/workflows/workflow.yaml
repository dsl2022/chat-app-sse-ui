name: Chat app build and deploy
on:
  workflow_dispatch:
    inputs:
      ui_bucket_name:
        description: Name of the S3 bucket hosting UI
        default: "chat-app-sse-ui"
        type: string
      backend_iam_role:
        description: Name of the Terraform backend assumable IAM Role
        default: "github-actions-dsl"
        type: string
      backend_s3_bucket:
        description: Name of the S3bucket for Terraform backend
        default: "2024-terraform-backend"
        type: string
      aws_account_id:
        description: AWS Account ID
        type: string
      aws_region:
        description: Target AWS Region
        default: "us-east-1"
        type: string
      backend_dynamodb_table:
        description: DynamoDB table for State lock
        default: "terraform-backend-ddb"
        type: string
jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/github-actions-dsl
          aws-region: ${{ inputs.aws_region }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: TF init
        shell: bash
        run: |
          set -eux
          terraform init -upgrade -reconfigure \
            -backend-config='skip_metadata_api_check=true' \
            -backend-config='skip_region_validation=true' \
            -backend-config='skip_credentials_validation=true' \
            -backend-config='region=${{ inputs.aws_region }}' \
            -backend-config='bucket=${{ inputs.backend_s3_bucket }}' \
            -backend-config='key=chatapp_ui/terraform-${{ env.ECR_REPO_NAME }}.tfstate' \
            -backend-config='dynamodb_table=${{ inputs.backend_dynamodb_table }}'            
        working-directory: terraform

      - name: Create Cloudfront [TF apply]
        shell: bash
        run: |
          set -eux
          terraform apply \
            -var 'repository_name=${{ env.ECR_REPO_NAME }}' \
            -var 'aws_account_id=${{ inputs.aws_account_id }}' \
            -var 'bucket_name=${{ inputs.ui_bucket_name }}' \
            -auto-approve
        working-directory: terraform